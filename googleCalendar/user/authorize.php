<?php

// מפנה את המשתמש לעמוד ההרשאה של גוגל עם כל הפרמטרים הדרושים
// authorize.php - התחלת תהליך ההרשאה:
// יצירת מחרוזת אקראית לאבטחה
// בניית URL עם כל הפרמטרים הנדרשים
// הפניה לעמוד ההרשאה של גוגל

// מאפשר לשמור מידע זמני על המשתמש לצורך בדיקה בהמשך
session_start();

// הגדרות OAuth של Google - מקבלים את הערכים האלה מ- Google Cloud Console
// זה אומר לגוגל איזו אפליקציה מבקשת הרשאות, והיא תציג את שם האפליקציה למשתמש בעמוד ההרשאות
$client_id = '929814436812-f7k03a3sq083jivb20qrppevh5fpbm2b.apps.googleusercontent.com'; // מזהה ייחודי של האפליקציה
//  הכתובת שאליה גוגל תחזיר את המשתמש לאחר שהוא מאשר או מסרב להרשאות
$redirect_uri = 'https://itayrm.mtacloud.co.il/Itay-testing-zone/finalProject/googleCalendar/user/oauth2callback.php'; // לאן גוגל תחזיר את המשתמש
// הרשאות שאנחנו מבקשים מהמשתמש
$scope = 'https://www.googleapis.com/auth/calendar'; // הרשאות שאנחנו מבקשים - גישה מלאה ללוח שנה

// יוצר מחרוזת ייחודית שמטרתה למנוע סוג של מתקפה שבה תוקף מנסה "לזייף בקשה" בשמו של משתמש מחובר, מבלי שהוא יודע
// התוקף שולח למשתמש לינק לדף מזויף או תמונה עם בקשה
// אם המשתמש כבר מחובר – הדפדפן ישלח לבד את הבקשה, והיא  תתבצע כאילו המשתמש שלח אותה (Cross-Site Request Forgery)

//  כדי לחסום את המתקפה: המחרוזת נשלחת לגוגל ואחר כך מוחזרת בחזרה. 
//  כשהיא חוזרת אנחנו בודקים שהיא זהה למחרוזת בסשן. כך אנחנו יודעים בוודאות שהמשתמש הוא זה ששלח את הבקשה ולא התוקף
$state = md5(uniqid(rand(), true));
//  כדי לוודא שהבקשה שהגיעה מגוגל היא אותה בקשה שהמשתמש התחיל
$_SESSION['oauth_state'] = $state; // שמירה ב-session לבדיקה מאוחר יותר

// בניית URL להרשאה של Google OAuth 2.0
$params = array(
    'client_id' => $client_id,                    // Google Cloud Console -מזהה ייחודי של האפליקציה כפי שניתן מ
    'redirect_uri' => $redirect_uri,              // הכתובת שגוגל תעביר אליה את המשתמש לאחר שהוא יסיים את תהליך ההרשאה
    'scope' => $scope,                            // איזה הרשאות מבקשים

    // oauth2callback.php מקבלים קוד מגוגל ואז יותר מאוחר נחליף אותו בטוקן גישה מהשרת של גוגל ב  
    'response_type' => 'code',                    // מבקשים קוד הרשאה (לא טוקן ישירות) - מאובטח יותר ומאפשר גם לחדש את הטוקן 

    'access_type' => 'offline',                   // מאפשר קבלת refresh token -  לחדש את הטוקן בעתיד בלי שהמשתמש יהיה מחובר שוב
    'prompt' => 'consent',                        // מכריח את גוגל להציג את עמוד ההרשאה בכל פעם, גם אם המשתמש כבר אישר בעבר
    'state' => $state                             // מחרוזת אקראית לאבטחה - מחרוזת ייחודית שנשמרה מקודם גם בסשן לצורך השוואה כשבקשה מגוגל תחזור
);

// יצירת ה-URL המלא עם כל הפרמטרים
$auth_url = 'https://accounts.google.com/o/oauth2/v2/auth?' . http_build_query($params);

// הפניית המשתמש לעמוד ההרשאה של גוגל
header('Location: ' . $auth_url);
exit(); //  לעצור את הסקריפט אחרי ההפניה כדי שלא יישלח עוד פלט
?>